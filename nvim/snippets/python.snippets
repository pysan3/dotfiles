# Generated by snippet-converter.nvim (https://github.com/smjonas/snippet-converter.nvim)

snippet insplit split_inputs: splits input by spaces and converts to list
	[${1:int}(i) for i in input().split()]
snippet fori for loop in range: for i in range
	for ${1:i} in range(${2:n}):$0
snippet _column Column: _column
	$1 = Column('$1', $0)
snippet _columnid ColumnID: id with autoincrement
	id = Column('id', Integer, primary_key=True, autoincrement=True)
snippet _increment counter_increase: snipet for incrementing counter
	counter += 1
snippet flush flush: print without new line but flush
	print($0, end='', flush=True)
snippet ldim last dim (dim=-1)
	dim=-1
snippet feq print message for debugging
	f'{$1=}'$0
snippet fs create string with f
	f'$0'
snippet apiroute @api.route: snippet for @api.route()
	@api.route('/api/${1:route_name}')
	async def $1(req: Request, resp: Response):
		$0
snippet apiproto @api.route: snippet for @api.route()
	@api.route('/api/${1:route_name}')
	@proto_wrap(REQ$1, RESP$1)
	async def $1(_req: Request, _resp: Response, *, preq: REQ$1, presp: RESP$1):
		$0
snippet newsession make session: SessionContext
	with SessionContext(session=${1:session}) as session:
		$0
snippet tdev snippet to add torch device
	device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
snippet none snippet to insert None
	None
snippet enter wait input from user
	input("Press ${1:ENTER} ${2:to continue}")
snippet nopl disable pylint for current line
	# pylint: disable-all
snippet notp disable pyright type-check for current line
	# type: ignore
snippet nowa disable flake8 type-check for current line
	# noqa
snippet noqa disable flake8 type-check for current line
	# noqa
