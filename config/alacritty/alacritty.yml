env:
  TERM: alacritty

window:
  # opacity: 0.8
  opacity: 1.0
  decorations: full
  dynamic_title: true

scrolling:
  history: 10000
  multiplier: 3

font:
  size: 7
  normal:
    family: PlemolJP Console NF
    style: Regular

hints:
  alphabet: "jfkdls;ahgurieowpq"
  enabled:
    - regex:
        "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
        [^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^⟨⟩`]+"
      hyperlinks: true
      command: xdg-open
      post_processing: true
      mouse:
        enabled: true
        mods: Control
      binding:
        key: U
        mods: Control|Shift

# Colors (xterm)
colors:
  primary:
    background: "#000000"
    foreground: "#ffffff"
  normal:
    black: "#000000"
    red: "#cd0000"
    green: "#00cd00"
    yellow: "#cdcd00"
    blue: "#0000ee"
    magenta: "#cd00cd"
    cyan: "#00cdcd"
    white: "#e5e5e5"
  bright:
    black: "#7f7f7f"
    red: "#ff0000"
    green: "#00ff00"
    yellow: "#ffff00"
    blue: "#5c5cff"
    magenta: "#ff00ff"
    cyan: "#00ffff"
    white: "#ffffff"

# # Colors (iTerm 2 default theme)
# colors:
#   # Default colors
#   primary:
#     # background: "#101421"
#     background: "#000000"
#     foreground: "#fffbf6"
#   # Normal colors
#   normal:
#     black: "#2e2e2e"
#     red: "#eb4129"
#     green: "#abe047"
#     yellow: "#f6c744"
#     blue: "#47a0f3"
#     magenta: "#7b5cb0"
#     cyan: "#64dbed"
#     white: "#e5e9f0"
#   # Bright colors
#   bright:
#     black: "#565656"
#     red: "#ec5357"
#     green: "#c0e17d"
#     yellow: "#f9da6a"
#     blue: "#49a4f8"
#     magenta: "#a47de9"
#     cyan: "#99faf2"
#     white: "#ffffff"

# # Colors (Terminal.app)
# colors:
#   # Default colors
#   primary:
#     background: "#000000"
#     foreground: "#b6b6b6"
#   # Normal colors
#   normal:
#     black: "#000000"
#     red: "#990000"
#     green: "#00a600"
#     yellow: "#999900"
#     blue: "#0000b2"
#     magenta: "#b200b2"
#     cyan: "#00a6b2"
#     white: "#bfbfbf"
#   # Bright colors
#   bright:
#     black: "#666666"
#     red: "#e50000"
#     green: "#00d900"
#     yellow: "#e5e500"
#     blue: "#0000ff"
#     magenta: "#e500e5"
#     cyan: "#00e5e5"
#     white: "#e5e5e5"

# Colors (PaperColor - Dark)
colors:
  # Default colors
  primary:
    background: "#1c1c1c"
    foreground: "#d0d0d0"
  cursor:
    text: "#1c1c1c"
    cursor: "#808080"
  # Normal colors
  normal:
    black: "#1c1c1c"
    red: "#af005f"
    green: "#5faf00"
    yellow: "#d7af5f"
    blue: "#5fafd7"
    magenta: "#808080"
    cyan: "#20a5ba"
    white: "#d0d0d0"
  # Bright colors
  bright:
    black: "#585858"
    red: "#5faf5f"
    green: "#afd700"
    yellow: "#af87d7"
    blue: "#ffaf00"
    magenta: "#ffaf00"
    cyan: "#4fb8cc"
    white: "#5f8787"

# # Colors (Pencil Dark)
# colors:
#   # Default Colors
#   primary:
#     background: "#212121"
#     foreground: "#f1f1f1"
#   # Normal colors
#   normal:
#     black: "#212121"
#     red: "#c30771"
#     green: "#10a778"
#     yellow: "#a89c14"
#     blue: "#008ec4"
#     magenta: "#523c79"
#     cyan: "#20a5ba"
#     white: "#e0e0e0"
#   # Bright colors
#   bright:
#     black: "#818181"
#     red: "#fb007a"
#     green: "#5fd7af"
#     yellow: "#f3e430"
#     blue: "#20bbfc"
#     magenta: "#6855de"
#     cyan: "#4fb8cc"
#     white: "#f1f1f1"

# # Colors (Hyper)
# colors:
#   # Default colors
#   primary:
#     background: "#000000"
#     foreground: "#ffffff"
#   cursor:
#     text: "#F81CE5"
#     cursor: "#ffffff"
#   # Normal colors
#   normal:
#     black: "#000000"
#     red: "#fe0100"
#     green: "#33ff00"
#     yellow: "#feff00"
#     blue: "#0066ff"
#     magenta: "#cc00ff"
#     cyan: "#00ffff"
#     white: "#d0d0d0"
#   # Bright colors
#   bright:
#     black: "#808080"
#     red: "#fe0100"
#     green: "#33ff00"
#     yellow: "#feff00"
#     blue: "#0066ff"
#     magenta: "#cc00ff"
#     cyan: "#00ffff"
#     white: "#FFFFFF"

# # Colors (Tomorrow Night Bright)
# colors:
#   # Default colors
#   primary:
#     background: "#000000"
#     foreground: "#eaeaea"
#   # Normal colors
#   normal:
#     black: "#000000"
#     red: "#d54e53"
#     green: "#b9ca4a"
#     yellow: "#e6c547"
#     blue: "#7aa6da"
#     magenta: "#c397d8"
#     cyan: "#70c0ba"
#     white: "#424242"
#   # Bright colors
#   bright:
#     black: "#666666"
#     red: "#ff3334"
#     green: "#9ec400"
#     yellow: "#e7c547"
#     blue: "#7aa6da"
#     magenta: "#b77ee0"
#     cyan: "#54ced6"
#     white: "#2a2a2a"

# # Colors (Tomorrow Night)
# colors:
#   # Default colors
#   primary:
#     background: "#1d1f21"
#     foreground: "#c5c8c6"
#   # Colors the cursor will use if `custom_cursor_colors` is true
#   cursor:
#     text: "#1d1f21"
#     cursor: "#ffffff"
#   # Normal colors
#   normal:
#     black: "#1d1f21"
#     red: "#cc6666"
#     green: "#b5bd68"
#     yellow: "#e6c547"
#     blue: "#81a2be"
#     magenta: "#b294bb"
#     cyan: "#70c0ba"
#     white: "#373b41"
#   # Bright colors
#   bright:
#     black: "#666666"
#     red: "#ff3334"
#     green: "#9ec400"
#     yellow: "#f0c674"
#     blue: "#81a2be"
#     magenta: "#b77ee0"
#     cyan: "#54ced6"
#     white: "#282a2e"

bell:
  command: None

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"
  save_to_clipboard: true

cursor:
  style:
    blinking: On
  vi_mode_style: None
  blink_interval: 750
  unfocused_hollow: true

live_config_reload: true

working_directory: None

mouse:
  hide_when_typing: false

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - ToggleViMode
#   - SearchForward
#       Start searching toward the right of the search origin.
#   - SearchBackward
#       Start searching toward the left of the search origin.
#   - Copy
#   - Paste
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollHalfPageUp
#   - ScrollHalfPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#       Remove the terminal's scrollback history.
#   - Hide
#       Hide the Alacritty window.
#   - Minimize
#       Minimize the Alacritty window.
#   - Quit
#       Quit Alacritty.
#   - ToggleFullscreen
#   - SpawnNewInstance
#       Spawn a new instance of Alacritty.
#   - ClearLogNotice
#       Clear Alacritty's UI warning and error notice.
#   - ClearSelection
#       Remove the active selection.
#   - ReceiveChar
#   - None
#
# - Vi mode exclusive actions:
#
#   - Open
#       Open URLs at the cursor location with the launcher configured in
#       `url.launcher`.
#   - ToggleNormalSelection
#   - ToggleLineSelection
#   - ToggleBlockSelection
#   - ToggleSemanticSelection
#       Toggle semantic selection based on `selection.semantic_escape_chars`.
#
# - Vi mode exclusive cursor motion actions:
#
#   - Up
#       One line up.
#   - Down
#       One line down.
#   - Left
#       One character left.
#   - Right
#       One character right.
#   - First
#       First column, or beginning of the line when already at the first column.
#   - Last
#       Last column, or beginning of the line when already at the last column.
#   - FirstOccupied
#       First non-empty cell in this terminal row, or first non-empty cell of
#       the line when already at the first cell of the row.
#   - High
#       Top of the screen.
#   - Middle
#       Center of the screen.
#   - Low
#       Bottom of the screen.
#   - SemanticLeft
#       Start of the previous semantically separated word.
#   - SemanticRight
#       Start of the next semantically separated word.
#   - SemanticLeftEnd
#       End of the previous semantically separated word.
#   - SemanticRightEnd
#       End of the next semantically separated word.
#   - WordLeft
#       Start of the previous whitespace separated word.
#   - WordRight
#       Start of the next whitespace separated word.
#   - WordLeftEnd
#       End of the previous whitespace separated word.
#   - WordRightEnd
#       End of the next whitespace separated word.
#   - Bracket
#       Character matching the bracket at the cursor's location.
#   - SearchNext
#       Beginning of the next match.
#   - SearchPrevious
#       Beginning of the previous match.
#   - SearchStart
#       Start of the match to the left of the vi mode cursor.
#   - SearchEnd
#       End of the match to the right of the vi mode cursor.
#
# - Search mode exclusive actions:
#   - SearchFocusNext
#       Move the focus to the next search match.
#   - SearchFocusPrevious
#       Move the focus to the previous search match.
#   - SearchConfirm
#   - SearchCancel
#   - SearchClear
#       Reset the search regex.
#   - SearchDeleteWord
#       Delete the last word in the search regex.
#   - SearchHistoryPrevious
#       Go to the previous regex in the search history.
#   - SearchHistoryNext
#       Go to the next regex in the search history.
#
# - macOS exclusive actions:
#   - ToggleSimpleFullscreen
#       Enter fullscreen without occupying another space.
#
# - Linux/BSD exclusive actions:
#
#   - CopySelection
#       Copy from the selection buffer.
#   - PasteSelection
#       Paste from the selection buffer.
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Search
#    - Alt
#    - Vi
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#
# If the same trigger is assigned to multiple actions, all of them are executed
# in the order they were defined in.
key_bindings:
  - { key: Paste, action: Paste }
  - { key: Copy, action: Copy }
  - { key: L, mods: Control, action: ClearLogNotice }
  - { key: L, mods: Control, mode: ~Vi|~Search, chars: "\x0c" }
  - { key: PageUp, mods: Shift, mode: ~Alt, action: ScrollPageUp }
  - { key: PageDown, mods: Shift, mode: ~Alt, action: ScrollPageDown }
  - { key: Home, mods: Shift, mode: ~Alt, action: ScrollToTop }
  - { key: End, mods: Shift, mode: ~Alt, action: ScrollToBottom }

  # Vi Mode
  - {
      key: Space,
      mods: Shift|Control,
      mode: Vi|~Search,
      action: ScrollToBottom,
    }
  - { key: Space, mods: Shift|Control, mode: ~Search, action: ToggleViMode }
  - { key: Escape, mode: Vi|~Search, action: ClearSelection }
  - { key: I, mode: Vi|~Search, action: ScrollToBottom }
  - { key: I, mode: Vi|~Search, action: ToggleViMode }
  - { key: C, mods: Control, mode: Vi|~Search, action: ToggleViMode }
  - { key: Y, mods: Control, mode: Vi|~Search, action: ScrollLineUp }
  - { key: E, mods: Control, mode: Vi|~Search, action: ScrollLineDown }
  - { key: G, mode: Vi|~Search, action: ScrollToTop }
  - { key: G, mods: Shift, mode: Vi|~Search, action: ScrollToBottom }
  - { key: B, mods: Control, mode: Vi|~Search, action: ScrollPageUp }
  - { key: F, mods: Control, mode: Vi|~Search, action: ScrollPageDown }
  - { key: U, mods: Control, mode: Vi|~Search, action: ScrollHalfPageUp }
  - { key: D, mods: Control, mode: Vi|~Search, action: ScrollHalfPageDown }
  - { key: Y, mode: Vi|~Search, action: Copy }
  - { key: Y, mode: Vi|~Search, action: ClearSelection }
  - { key: Copy, mode: Vi|~Search, action: ClearSelection }
  - { key: V, mode: Vi|~Search, action: ToggleNormalSelection }
  - { key: V, mods: Shift, mode: Vi|~Search, action: ToggleLineSelection }
  - { key: V, mods: Control, mode: Vi|~Search, action: ToggleBlockSelection }
  - { key: V, mods: Alt, mode: Vi|~Search, action: ToggleSemanticSelection }
  - { key: Return, mode: Vi|~Search, action: Open }
  - { key: K, mode: Vi|~Search, action: Up }
  - { key: J, mode: Vi|~Search, action: Down }
  - { key: H, mode: Vi|~Search, action: Left }
  - { key: L, mode: Vi|~Search, action: Right }
  - { key: Up, mode: Vi|~Search, action: Up }
  - { key: Down, mode: Vi|~Search, action: Down }
  - { key: Left, mode: Vi|~Search, action: Left }
  - { key: Right, mode: Vi|~Search, action: Right }
  - { key: Key0, mode: Vi|~Search, action: First }
  - { key: Key4, mods: Shift, mode: Vi|~Search, action: Last }
  - { key: Key6, mods: Shift, mode: Vi|~Search, action: FirstOccupied }
  - { key: H, mods: Shift, mode: Vi|~Search, action: High }
  - { key: M, mods: Shift, mode: Vi|~Search, action: Middle }
  - { key: L, mods: Shift, mode: Vi|~Search, action: Low }
  - { key: B, mode: Vi|~Search, action: SemanticLeft }
  - { key: W, mode: Vi|~Search, action: SemanticRight }
  - { key: E, mode: Vi|~Search, action: SemanticRightEnd }
  - { key: B, mods: Shift, mode: Vi|~Search, action: WordLeft }
  - { key: W, mods: Shift, mode: Vi|~Search, action: WordRight }
  - { key: E, mods: Shift, mode: Vi|~Search, action: WordRightEnd }
  - { key: Key5, mods: Shift, mode: Vi|~Search, action: Bracket }
  - { key: Slash, mode: Vi|~Search, action: SearchForward }
  - { key: Slash, mods: Shift, mode: Vi|~Search, action: SearchBackward }
  - { key: N, mode: Vi|~Search, action: SearchNext }
  - { key: N, mods: Shift, mode: Vi|~Search, action: SearchPrevious }

  # Search Mode
  - { key: Return, mode: Search|Vi, action: SearchConfirm }
  - { key: Escape, mode: Search, action: SearchCancel }
  - { key: C, mods: Control, mode: Search, action: SearchCancel }
  - { key: U, mods: Control, mode: Search, action: SearchClear }
  - { key: W, mods: Control, mode: Search, action: SearchDeleteWord }
  - { key: P, mods: Control, mode: Search, action: SearchHistoryPrevious }
  - { key: N, mods: Control, mode: Search, action: SearchHistoryNext }
  - { key: Up, mode: Search, action: SearchHistoryPrevious }
  - { key: Down, mode: Search, action: SearchHistoryNext }
  - { key: Return, mode: Search|~Vi, action: SearchFocusNext }
  - { key: Return, mods: Shift, mode: Search|~Vi, action: SearchFocusPrevious }

  # (Windows, Linux, and BSD only)
  - { key: V, mods: Control|Shift, mode: ~Vi, action: Paste }
  - { key: C, mods: Control|Shift, action: Copy }
  - { key: F, mods: Control|Shift, mode: ~Search, action: SearchForward }
  - { key: B, mods: Control|Shift, mode: ~Search, action: SearchBackward }
  - { key: C, mods: Control|Shift, mode: Vi|~Search, action: ClearSelection }
  - { key: Insert, mods: Shift, action: PasteSelection }
  - { key: Key0, mods: Control, action: ResetFontSize }
  - { key: Equals, mods: Control, action: IncreaseFontSize }
  - { key: Plus, mods: Control, action: IncreaseFontSize }
  - { key: NumpadAdd, mods: Control, action: IncreaseFontSize }
  - { key: Minus, mods: Control, action: DecreaseFontSize }
  - { key: NumpadSubtract, mods: Control, action: DecreaseFontSize }

debug:
  persistent_logging: false
  log_level: Warn
