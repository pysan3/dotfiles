set -g prefix C-a           # Change prefix key to C-a
unbind C-b
set -sg escape-time 1       # keystroke delay
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"  # reload config file in current session
bind C-a send-prefix        # send C-a to nested sessions
set -g history-limit 10000

##### KEYBINDS

# Alias to arrow keys
bind -n 'C-j' send-keys Down
bind -n 'C-k' send-keys Up

### PANE
# Movement between panes
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|nvim)(diff)?$'"
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
bind -T copy-mode-vi 'M-h' select-pane -L
bind -T copy-mode-vi 'M-j' select-pane -D
bind -T copy-mode-vi 'M-k' select-pane -U
bind -T copy-mode-vi 'M-l' select-pane -R
# Change size of pane
bind -r < resize-pane -L 5
bind -r > resize-pane -R 5
bind -r = resize-pane -D 5
bind -r + resize-pane -U 5
# Create new pane; copy cwd
bind -n M-v split-window -vc "#{pane_current_path}"
bind -n M-b split-window -hc "#{pane_current_path}"
bind -n M-y split-window -hc "#{pane_current_path}" \; resize-pane -x 100
bind -n M-t split-window -vc "#{pane_current_path}" \; resize-pane -y 16
bind | split-window -h
bind - split-window -v
# Kill pane
bind -n M-x kill-pane
# Zoom pane
bind -n M-z resize-pane -Z

### SCRATCH BUFFER
bind -n M-r display-popup -w "80%" -h "80%" -E "tmux new-session -A -s scratch"

### WINDOWS
# Create new window; copy cwd
bind -n M-c new-window -c '#{pane_current_path}'
# Movement between windows
bind -n M-, select-window -t :-
bind -n M-\; select-window -t :+
bind -n M-0 select-window -t 0
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
# Delete Windows
bind X kill-window

### SESSIONS
# Detach session
bind -n M-d detach-client
# Switch session
bind -n M-s run-shell 'tmux choose-tree -swZ -O time -f "##{!=:##{session_name},#{session_name}}"'
bind -n M-o switch-client -p
bind -n M-i switch-client -n

### COPY MODE
bind -n M-m copy-mode -e # enter copy mode keybind
bind -n M-p run "xclip -o | tmux load-buffer - ; tmux paste-buffer" # paste from system clipboard

##### OTHER CONFIGURATIONS
# Enable mouse and mouse scroll
setw -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# terminal color
set -g default-terminal "screen-256color"
set -ga terminal-overrides ',*:Tc' # this is for 256 color
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # this is for the cursor shape

# neovim config
set -g focus-events on

# Status Bar
set -g status-position top
set -g status-left-length 40
set -g status-left "#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-right "#[fg=blue]#(ps -f --no-headers --ppid $(tmux display-message -p #{pane_pid}) | awk '{ print substr($0, index($0,$8)) }') #[fg=white][%Y-%m-%d(%a) %H:%M]"
set -g status-right-length 120
set -g status-interval 15           # Refresh seconds of status bar
set -g status-justify centre        # Justify window list at center of status bar

# Color of status bar (bar at the top)
set -g status-fg white
set -g status-bg black

# Color of window list
setw -g window-status-style bg=default,dim,fg=cyan
setw -g window-status-current-style bg=red,bright,fg=white

# Color of pane border (line between panes)
set -g pane-border-style fg=white
set -g pane-active-border-style fg=yellow

# Color of terminal outputs
set -g message-style bg=black,bright,fg=white

# Visuals on
setw -g monitor-activity on
set -g visual-activity on

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key    -T copy-mode-vi v     send-keys -X begin-selection
bind-key    -T copy-mode-vi V     send-keys -X select-line
bind-key    -T copy-mode-vi C-v   send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key    -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -ib"
bind-key    -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -ib"
bind-key    -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -ib"

##### Plugins
set-environment -g TMUX_PLUGIN_MANAGER_PATH "${XDG_DATA_HOME}/tmux/plugins"
set -g @resurrect-dir "~/.local/share/tmux/data/resurrect"
set -g @resurrect-save 'C-z'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes 'ssh psql mysql sqlite3 "~command.sh" "~yarn watch"'
set -g @suspend_key 'M-q'
set -g @suspend_suspended_options " \
  status-left-style::bg=brightblack\\,fg=black bold dim, \
  window-status-current-style:gw:bg=brightblack\\,fg=black, \
  window-status-last-style:gw:fg=brightblack, \
  window-status-style:gw:bg=black\\,fg=brightblack, \
  @mode_indicator_custom_prompt:: ---- , \
  @mode_indicator_custom_mode_style::bg=brightblack\\,fg=black, \
"

set -g @plugin 'tmux-plugins/tmux-resurrect' # <C-s>: save, <C-r>: restore
set -g @plugin 'laktak/extrakto' # <tab>: fzf from current pane
set -g @plugin 'tmux-plugins/tmux-yank' # y: better yanking?
# set -g @plugin 'CrispyConductor/tmux-copy-toolkit' # S: easycopy, Q: quickcopy, P: quickopen, W: linecopy
set -g @plugin 'pysan3/tmux-copy-toolkit' # S: easycopy, Q: quickcopy, P: quickopen, W: linecopy
set -g @plugin 'tmux-plugins/tmux-copycat' # <C-f>: file, <C-g>: git status, <C-u>: url, <C-d>: number, <M-i>: ip
set -g @plugin 'MunifTanjim/tmux-suspend' # suspend nested tmux sessions

run "${XDG_DATA_HOME}/tmux/plugins/tpm/tpm"
