set -g prefix C-a           # prefixキーをC-aに変更する
unbind C-b                  # C-bのキーバインドを解除する
set -sg escape-time 1       # キーストロークのディレイを減らす
bind r source-file ~/.tmux.conf \; display "Reloaded!"  # 設定ファイルをリロードする
bind C-a send-prefix        # C-a*2でtmux内のプログラムにC-aを送る

#ペイン間の移動
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
#ペインの大きさを調整
bind -r < resize-pane -L 5
bind -r > resize-pane -R 5
bind -r / resize-pane -D 5
bind -r + resize-pane -U 5
#ペインを区切る(current-directoryを引き継ぐ)
bind -n M-v split-window -vc "#{pane_current_path}"
bind -n M-b split-window -hc "#{pane_current_path}"
bind -n M-m split-window -hc "#{pane_current_path}" \; resize-pane -x 100
bind | split-window -h      # | でペインを縦に分割する
bind - split-window -v      # - でペインを横に分割する
#ペインを消去
bind -n M-x kill-pane

#新しいウィンドウ(current-directoryを引き継ぐ)
bind -n M-S-w new-window -c '#{pane_current_path}'
#ウィンドウ間の移動
bind -n M-, select-window -t :-
bind -n M-\; select-window -t :+
bind -n M-0 select-window -t 0
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

#ウィンドウの削除
bind X kill-window

# マウス操作を有効にする
setw -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# 256色端末を使用する
set -g default-terminal "screen-256color"
# set -ga terminal-overrides ",xterm-256colors:Tc"
set -ga terminal-overrides ',*:Tc' # this is for 256 color
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # this is for the cursor shape

# neovim config
set-option -g focus-events on

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black

# ウィンドウリストの色を設定する
setw -g window-status-style bg=default,dim,fg=cyan
# アクティブなウィンドウを目立たせる
setw -g window-status-current-style bg=red,bright,fg=white

# ペインボーダーの色を設定する
set -g pane-border-style fg=white
# アクティブなペインを目立たせる
# set -g pane-active-border-style fg=cyan
set -g pane-active-border-style fg=yellow

# コマンドラインの色を設定する
set -g message-style bg=black,bright,fg=white

# ステータスバーを設定する
# ステータスバーをトップに配置する
set-option -g status-position top

# 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
# 右パネルを設定する
set-option -g status-right '[%Y-%m-%d(%a) %H:%M]'

set -g status-interval 15           # リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-justify centre        # ウィンドウリストの位置を中心寄せにする
# ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on

# viのキーバインドを使用する
bind-key -n M-i copy-mode
setw -g mode-keys vi
bind-key    -T copy-mode-vi v     send-keys -X begin-selection
bind-key    -T copy-mode-vi V     send-keys -X select-line
bind-key    -T copy-mode-vi C-v   send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key    -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -ib"
bind-key    -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -ib"
bind-key    -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -ib"

# plugin management
set-environment -g TMUX_PLUGIN_MANAGER_PATH "${XDG_DATA_HOME}/tmux/plugins"
set -g @resurrect-dir "~/.local/share/tmux/data/resurrect"
set -g @resurrect-save 'C-z'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes 'ssh psql mysql sqlite3 "~command.sh" "~yarn watch"'

set -g @plugin 'tmux-plugins/tmux-resurrect' # <C-s>: save, <C-r>: restore
set -g @plugin 'laktak/extrakto' # <tab>: fzf from current pane
# set -g @plugin 'tmux-plugins/tmux-yank' # y: better yanking?
# set -g @plugin 'CrispyConductor/tmux-copy-toolkit' # S: easycopy, Q: quickcopy, P: quickopen, W: linecopy
set -g @plugin 'pysan3/tmux-copy-toolkit' # S: easycopy, Q: quickcopy, P: quickopen, W: linecopy
set -g @plugin 'tmux-plugins/tmux-copycat' # <C-f>: file, <C-g>: git status, <C-u>: url, <C-d>: number, <M-i>: ip

run "${XDG_DATA_HOME}/tmux/plugins/tpm/tpm"
